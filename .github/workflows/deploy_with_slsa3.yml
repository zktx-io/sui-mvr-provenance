name: MVR Provenance Full Workflow

description: |
  A reusable GitHub Actions workflow that builds a Move package,
  deploys it with external signing, generates provenance, and
  registers the metadata to MVR with verified integrity.

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: '.'

    secrets:
      GIT_SIGNER_PIN:
        required: false
      ED25519_PRIVATE_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: zktx-io/sui-mvr-provenance@v0.0.11
        with:
          working-directory: ${{ inputs.working-directory }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      base64_provenance: ${{ steps.encode.outputs.base64_file }}
    steps:
      - name: Download Bytecode Dump
        uses: actions/download-artifact@v4
        with:
          name: bytecode.dump.json

      - name: Download mvr.config.json
        uses: actions/download-artifact@v4
        with:
          name: mvr.config.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: zktx-io/sui-mvr-provenance
          ref: v0.0.11
          path: temp

      - name: Run deploy.js from zktx-io/sui-mvr-provenance
        working-directory: temp
        env:
          GIT_SIGNER_PIN: ${{ secrets.GIT_SIGNER_PIN }}
          ED25519_PRIVATE_KEY: ${{ secrets.ED25519_PRIVATE_KEY }}
        run: |
          npm ci
          node dist/deploy

      - id: encode
        run: |
          echo "::group::📄 provenance.json (raw)"
          cat provenance.json
          echo "::endgroup::"

          echo "::group::🔐 provenance.json (base64)"
          base64_encoded=$(base64 -w0 provenance.json)
          echo "$base64_encoded"
          echo "::endgroup::"

          echo "base64_file=$base64_encoded" >> $GITHUB_OUTPUT

  provenance:
    needs: deploy
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: ${{ needs.deploy.outputs.base64_provenance }}
      upload-assets: false
      provenance-name: 'mvr.intoto.jsonl'
    permissions:
      id-token: write
      contents: write
      actions: read
